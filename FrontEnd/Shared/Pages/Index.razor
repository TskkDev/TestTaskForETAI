@page "/"
@using FrontEnd.Features.Category.StateManagment.Actions.TopCategoryActions;
@using FrontEnd.Features.Category.StateManagment.States;
@using FrontEnd.Features.Category.Component;
@using FrontEnd.Features.Goods.StateManagment.States;
@using FrontEnd.Features.Goods.Component;
@using FrontEnd.Shared.Components
@using FrontEnd.Shared.Service.ErrorService;
@using SharedModels.Models.RespondModels.Response;
@inject IErrorService ErrorService
@inject IState<CategoryState> CategoryState
@inject IState<GoodState> GoodState
@inject IDispatcher Dispatcher
@inherits Fluxor.Blazor.Web.Components.FluxorComponent

<PageTitle>Shop</PageTitle>

<ModalComponent @ref="modal">
    <CategoriesModalComponent UpdateId="null"
        ToggleModal="CloseModal"></CategoriesModalComponent>
</ModalComponent>

<ModalComponent @ref="errorModal">
    <div class="error__block">
        <p class="errorMessage__ico">⚠</p>
        @foreach (var error in ErrorMessage)
        {
            <p class="errorMessage">@error</p>
        }
    </div>
</ModalComponent>

<div class="content">
    <div class="categories__block">

        <button class="categories__add" @onclick="OpenModal">Открыть модальное окно</button>
        <CategoryListComponent Categories="CategoryState.Value.Categories" />

    </div>
    @if (GoodState.Value.Goods is not null && GoodState.Value.Goods.Any())
    {
        <div class="goods__block ">
            <h1>
                Category: @(GoodState.Value.Goods.First().CategoryName)
            </h1>

            <GoodsTableComponent CategoryIdParam="GoodState.Value.Goods.First().CategoryId" />
        </div>    
    }
</div>



