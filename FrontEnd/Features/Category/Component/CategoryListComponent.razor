@using FrontEnd.Features.Category.StateManagment.Actions.TongleCategoryActions;
@using SharedModels.Models.RespondModels.Response;
@using FrontEnd.Shared.Components
@inject IDispatcher Dispatcher
@inject IState<CategoryState> CategoryState

@inherits Fluxor.Blazor.Web.Components.FluxorComponent

<ModalComponent @ref="modal">
    <CategoriesModalComponent CategoryName="@CategoryName" ParentCategoryId="@ParentCategoryId"
    ToggleModal="@CloseModal" UpdateId="@CategoryId"></CategoriesModalComponent>
</ModalComponent>
@if (Categories != null && Categories.Any())
{
    <ul class="category__ul">
        @foreach (var category in Categories)
        {

            <li class="category__li">
                <div class="category__li__content">
                    <div class="category__li__info">
                        <p class="category__li__name">
                            Name:
                            <span class=" category__li__name__value" >
                                @category.Name </span>
                            <button class="category__editBtn" @onclick="() =>OpenModal(category)">🖊️</button>
                        </p>
                        <p class="category__li__subInfo">
                            Id:
                            <span class="category__li__subInfo__value">@category.Id </span>
                            CountOfGoods:
                            <span class="category__li__subInfo__value">@category.CountGoods </span>
                        </p>
                    </div>
                    @if (category.CountGoods > 0)
                    {
                        <button class="category__loadGoods" @onclick="() 
                            =>LoadGoodsFromCategory(category.Id)">Открыть</button>
                    }
                    <button class="category__toggleBtn" @onclick="() => ToggleCategory(category)">
                        @(category.IsVisible ? "▲" : "▼")
                        </button>
                    </div>
                    @if (category.IsVisible)
                    {
                    <CategoryListComponent Categories="category.SubCategories" />
                    }

                </li>
        }
    </ul>
}